today = Sys.Date()
format(today, "%d %b %Y")
tenweeks = seq(today, length.out=10, by="1 week")
weekdays (today)
months(tenweeks)
as.Date(.leap.seconds)
ls()
ls()
Country = c("Brazil","China","India","Switzerland","USA")
LifeExpectancy = c(74,76,65,83,79)
Country
LifeExpectancy
CombCountryLifeExp = data.frame(Country, LifeExpectancy)
CombCountryLifeExp
Population = c(199000, 1390000, 1240000, 7997, 318000)
CombCountryLifeExp = cbind (CombCountryLifeExp, Population)
CombCountryLifeExp
Country = c("Australia","Greece")
LifeExpectancy = c(82,81)
Population = c(23050, 11125)
CombCountryLifeExp
CombCountryLifeExp = rbind(Country,LifeExpectancy,Population)
CombCountryLifeExp
Country = c("Brazil","China","India","Switzerland","USA") #simple vector holding country names
LifeExpectancy = c(74,76,65,83,79) #simple vector which holds numeric values
Country
CombCountryLifeExp
Population = c(199000, 1390000, 1240000, 7997, 318000)
CombCountryLifeExp = cbind (CombCountryLifeExp, Population) #columnbind function
CombCountryLifeExp
CombCountryLifeExp = data.frame(Country, LifeExpectancy) #data frame can hold mixture of values
CombCountryLifeExp
Population = c(199000, 1390000, 1240000, 7997, 318000)
CombCountryLifeExp = cbind (CombCountryLifeExp, Population) #columnbind function
CombCountryLifeExp
Country = c("Australia","Greece")
LifeExpectancy = c(82,81)
Population = c(23050, 11125)
NewRow = data.frame(Country, LifeExpectancy,Population)
CombCountryLifeExp = rbind(CombCountryLifeExp, NewRow)
CombCountryLifeExp
setwd("~/")
setwd("~/")
setwd("C:/Users/Fahad/Desktop/R Projects")
getWd()
getwd()
WHo = read.csv("WHO.csv")
WHO = read.csv("WHO.csv")
str(WHO)
WHO$Country
summary(WHO)
WHOEurope = subset(WHO, Region == "Europe")
WHOEurope
write.csv(WHOEurope, "WHO_Europe.csv")
ls()
rm(WHOEurope)
rm(WHo)
str(WHO)
summary(WHO)
mean(WHO$Under15)
sd(WHO$Under15)
install.packages("swirl")
library(swirl)
swirl()
x = c(4,TRUE)
class(x)
x=3
x^3
x <- 1:10
if(x > 5) {
x <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z = 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
install.packages("swirl")
library(swirl)
swirl()
pollutantmean <- function(directory, pollutant, id = 1:332) {
#set the path
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,directory)
path = paste(path,collapse="")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
setwd("~/R Projects/Coursera/R-Programming-Coursera/Code/Assignments")
submit()
2
2
pollutantmean <- function(directory, pollutant, id = 1:332) {
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,directory)
path = paste(path,collapse="")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean("specdata","nitrate",23)
pollutantmean("specdata","nitrate",70:82)
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","sulfate",1:10)
source(submitscript1.R)
getwd()
setwd("~/R Projects/Coursera/R-Programming-Coursera/Code/Assignments")
getwd()
source(submitscript1.R)
source(submitscript1.R)
getwd()
source(submitscript1.R)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
pollutantmean("specdata","nitrate",23)
round(pollutantmean("specdata","nitrate",23))
pollutantmean("specdata","nitrate",23)
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
#set the path
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,directory)
path = paste(path,collapse="")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = sub("\\.csv$","",fileList)
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
#set the path
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,directory)
path = paste(path,collapse="")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
#import data
Data = lapply(file.path(path,selected.files),read.csv)
selected.files = fileList[match(id,file.names)]
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
#set the path
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,directory)
path = paste(path,collapse="")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
#set the path
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,directory)
path = paste(path,collapse="")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = sub("\\.csv$","",fileList)
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
#set the path
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,directory)
path = paste(path,collapse="")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean("specdata","sulfate",1:10)
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,directory)
path = paste(path,collapse="")
fileList = list.files(path)
fileList
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,directory)
path = paste(path,collapse="")
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,"specdata")
path = paste(path,collapse="")
path
fileList = list.files(path)
file.names = sub("\\.csv$","",fileList)
file.names
selected.files = fileList[match(id,file.names)]
id = 1
selected.files = fileList[match(id,file.names)]
selected.files
file.names
selected.files = fileList[match(as.character(id),file.names)]
selected.files
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
#set the path
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,directory)
path = paste(path,collapse="")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean("specdata","sulfate",1:10)
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/specdata"
path
fileList = list.files(path)
fileList
class(fileList)
file.names = sub("\\.csv$","",fileList)
file.names
class(file.names)
fileList
selected.files = fileList[match("10",file.names)]
selected.files
1:10 %in% c(1,3,5,9)
pollutantmean <- function(directory, pollutant, id = 1:332) {
#set the path
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,directory)
path = paste(path,collapse="")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean("specdata","sulfate",1:10)
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,directory)
path = paste(path,collapse="")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
file.names
pollutantmean <- function(directory, pollutant, id = 1:332) {
#set the path
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/"
path = c(path,directory)
path = paste(path,collapse="")
#get the file List in that directory
fileList = list.files(path)
#extract the file names and store as numeric for comparison
file.names = as.numeric(sub("\\.csv$","",fileList))
#select files to be imported based on the user input or default
selected.files = fileList[match(id,file.names)]
#import data
Data = lapply(file.path(path,selected.files),read.csv)
#convert into data frame
Data = do.call(rbind.data.frame,Data)
#calculate mean
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",1:333)
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","nitrate",70:72)
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/specdata"
path
fileList = list.files(path)
fileList
file.names = as.numeric(sub("\\.csv$","",fileList))
file.names
selected.files = fileList[match(id,file.names)]
selected.files = fileList[match(1,file.names)]
selected.files
Data = lapply(file.path(path,selected.files),read.csv)
Data
str(Data)
Data = do.call(rbind.data.frame,Data)
Data
str(Data)
summary(Data)
1460-1344
1460-1339
sub = subset(Data, Data$sulfate != NA & Data$sulfate != NA)
sub
sub = subset(Data, Data$sulfate != NA)
sub
swirl()
library(swirl)
swirl()
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
myData <- sample(c(y,z),100)
class(myData)
is.na(myData)
myNA<-is.na(myData)
myNA
myData == NA
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/specdata"
fileList = list.files(path)
file.names = as.numeric(sub("\\.csv$","",fileList))
selected.files = fileList[match(1,file.names)]
Data = lapply(file.path(path,selected.files),read.csv)
str(Data)
Data = do.call(rbind.data.frame,Data)
str(Data)
summary(Data)
myNA = is.na(Data)
myNA
sum(myNA)
res = nrow(Data) - sum(myNA)
res
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/specdata"
fileList = list.files(path)
file.names = as.numeric(sub("\\.csv$","",fileList))
selected.files = fileList[match(1,file.names)]
Data = lapply(file.path(path,selected.files),read.csv)
Data = do.call(rbind.data.frame,Data)
res = complete.cases(Data)
path = "C:/Users/607518069/Documents/R Projects/Coursera/R-Programming-Coursera/Data/specdata"
fileList = list.files(path)
file.names = as.numeric(sub("\\.csv$","",fileList))
selected.files = fileList[match(1,file.names)]
Data = lapply(file.path(path,selected.files),read.csv)
Data
